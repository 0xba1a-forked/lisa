# run name prefix to help grouping results and put it in title.
name: full example
# share configurations for similar runs.
parent:
  - path: parentconfig.yaml
    # for simple merge, this part is optional.
    # operations include:
    # overwrite: default behavior. add non-exist items and replace exist.
    # remove: remove specified path totally
    # add: add non-exist, not replace exist.
    strategy:
      - path: platform.template
        operation: remove
# add extended classes can be put in folders and include here.
# it doesn't matter how those files are organized, lisa loads by their inherits relationship.
# if there is any conflict on type name, there should be an error message.
extension:
  paths:
    - "./myextends"
# it uses to support variables in other fields.
# duplicate items will be overwritten one by one.
# if a variable is not defined here, LISA can fail earlier to ask check it.
# file path is relative to LISA command starts.
variable:
  - file: secrets.yaml
    # If it's secret, it will be removed from log and other output information.
    # secret files also need to be removed after test is done.
    isSecret: true
  # continue to support v2 format. it's simple.
  - file: v2secrets.xml
    isSecret: true
  - file: env.yaml
  # redefine parameters in file to reuse configurations
  - name: username
    value: azureuser
    # it's not recommended highly to put secret in configurations directly.
    isSecret: true
# supports multiple artifacts in future.
artifact:
  # name is optional. artifacts can be referred by name or index.
  - name: default
    type: vhd
    locations:
      - type: http
        path: https://path-to-azure-storage/aaa.vhd
  - name: dsvm
    type: vhd
    locations:
      - type: http
        path: https://path-to-azure-storage/bbb.vhd
# it's spec of environment and node.
# for ready type, it's optional.
environment:
  maxConcurrency: 1
  environments:
    - name: default
      topology: subnet
      # template and nodes conflicts, they should have only one.
      #  it uses to prevent duplicate content for big amount nodes.
      template:
        - vcpu: 4
          nodeCount: 2
          # optional, if there is only one artifact.
          artifact: default
          # sometimes, it may need special configuration for a platform
          # we should avoid this kind of setting, it limits configuration to other platforms.
          azure:
            vmSize: testSize
            flag: "test=true"
      nodes:
        - type: spec
          azure:
            vmSize: testSize
        - type: spec
          memoryGB: 8
          gpuCount: 1
          artifact: dsvm
        # local and remote are node type, and don't need platform to handle
        - type: local
          # If test suite doesn't specify where to run a case,
          #  it should be run on default node.
          isDefault: true
          # it's optional
        - type: remote
          name: secondary
          address: 10.0.0.2
          port: 22
          publicAddress: 23.36.36.36
          publicPort: 1112
          username: $$linuxTestUsername$$
          password: $$linuxTestPassword$$
          privateKeyFile: $$sshPrivateKey$$
      # the environment spec may not be fully supported by each platform.
      # If so, there is a warning message.
      # Environment spec can be forced to apply, as error is loud.
      warnAsError: true
# it sends test progress and results to any place wanted.
notifier:
  - type: junit
  - type: html
  - type: database
    enableTelemetry: true
    connectionstring: $$ResultDatabaseString$$
# it's examples for all platforms, but currently should leave single one only.
platform:
  - name: default
    type: azure
    # it's platform specified parameters.
    subscription: $$SubscriptionID$$
    subscriptionKey: $$SubscriptionServicePrincipalKey$$
    datacenter: wu
  # It uses to pure existing environment.
  #  run test cases on existing machine.
  - type: ready
# rules apply ordered on previous selection.
# The order of test cases running is not guaranteed, until it set dependencies.
testcase:
  - criteria:
      # all rules in same criteria are AND condition.
      # we may support richer conditions later.
      # match case by name pattern
      name: "*-network*"
      # compatible with current test cases.
      area: network
      category: network
      priority: 0
      # tag is a simple way to include test cases within same topic.
      tag: vf
    # force to select. If any reason test cases are dropped, fail the run.
    forceInclude: true
    # if it's false, the test cases are disable in current run.
    # it uses to control test cases dynamic form command line.
    enable: true
    name: network
    # TODO: if failed
    stopRunAfterFailed: true
  # it means there are dependencies among test cases.
  - name: settings
    criteria:
      name: this group shows different settings
    # run this group of test cases several times
    # default is 1
    iteration: 5
    needNewEnvironment: true
    # Once it's set, failed test result will be rewrite to success
    # it uses to work around some cases temporarily, don't overuse it.
    # default is false
    ignoreFailure: true
    environment: default
  - name: excluded cases
    criteria:
      name: "excluded test cases"
    # use to exclude some test cases
    # default is true
    include: false
  - name: unstable test cases
    criteria:
      name: "we don't have unstable case"
    # retry times. default is 0, means not retry.
    retry: 1
